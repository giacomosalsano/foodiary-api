org: giacomodev
service: foodiary-api

custom:
  uploadsBucketName: foodiary-uploads-giacomo

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs22.x
  architecture: arm64
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
    JWT_SECRET: ${env:JWT_SECRET}
    UPLOADS_BUCKET_NAME: ${self:custom.uploadsBucketName} 
    MEALS_QUEUE_URL: !Ref MealsQueue
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
          Resource: !Sub 'arn:aws:s3:::${self:custom.uploadsBucketName}/*'
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
          Resource: !GetAtt MealsQueue.Arn

package:
  individually: true

resources:
  Resources:
    UploadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.uploadsBucketName}
        NotificationConfiguration:
          LambdaConfigurations:
            - Event: 's3:ObjectCreated:*'
              Function: !GetAtt FileUploadedEventLambdaFunction.Arn

    S3InvokeLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !GetAtt FileUploadedEventLambdaFunction.Arn
        Action: 'lambda:InvokeFunction'
        Principal: s3.amazonaws.com
        SourceArn: !Sub 'arn:aws:s3:::${self:custom.uploadsBucketName}'

    MealsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: foodiary-meals-queue-giacomo
        VisibilityTimeout: 60
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt MealsDLQ.Arn
          maxReceiveCount: 2
          
    MealsDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: foodiary-meals-dlq-giacomo

build:
  esbuild:
    minify: true
    sourcemap: false

functions:
  signin:
    handler: src/functions/signIn.handler
    timeout: 25
    events:
      - httpApi:
          method: POST
          path: /signin

  signup:
    handler: src/functions/signUp.handler
    timeout: 25
    events:
      - httpApi:
          method: POST
          path: /signup

  me:
    handler: src/functions/me.handler
    timeout: 25
    events:
      - httpApi:
          method: GET
          path: /me

  createMeal:
    handler: src/functions/createMeal.handler
    timeout: 25
    events:
      - httpApi:
          method: POST
          path: /meals

  listMeals:
    handler: src/functions/listMeals.handler
    timeout: 25
    events:
      - httpApi:
          method: GET
          path: /meals

  getMeal:
    handler: src/functions/getMealById.handler
    timeout: 25
    events:
      - httpApi:
          method: GET
          path: /meals/{mealId}

  fileUploadedEvent:
    handler: src/functions/fileUploadedEvent.handler

  processMeal:
    handler: src/functions/processMeal.handler
    events:
      - sqs:
          arn: !GetAtt MealsQueue.Arn
          batchSize: 1